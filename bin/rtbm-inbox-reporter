#!/usr/bin/perl
use 5.10.1;
use strict;
use warnings;
use autodie qw(:all);

use RTBM;
use DateTime;
use DateTime::Format::Flexible;     # Overkill, but who cares?

my $rtbm = RTBM->new;

# say $rtbm->get_auth_url;          # Only needed for first auth

# Get our inbox tasks, and count them.

my $inbox_tasks = $rtbm->get_inbox;
my $num_tasks = @$inbox_tasks;

say "Number of tasks is $num_tasks";

# Calculate the max age of our tasks.

my $now = DateTime->now;;
my $max_age = 0;

foreach my $task (@$inbox_tasks) {
    my $created_date = DateTime::Format::Flexible->parse_datetime(
        $task->{created}
    );

    my $delta = $now->delta_days($created_date);

    my $days_old = $delta->days;

    if ($days_old > $max_age) {
        $max_age = $days_old
    }
}

say "Maximum age is $max_age";

# The Beeminder API is currently alpha, so we instead make a call-out
# to my shim that hooks into it.

say "Submitting data points to beeminder";

system('bmndr','rtm_inbox_size',$num_tasks, "auto: rtbm");
system('bmndr','rtm_inbox_age', $max_age,   "auto: rtbm");

say "Done";
